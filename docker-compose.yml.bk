version: '3'
services:
  ecr-postgresql:
    build:
      context: ./ecr_postgresql
    restart: always
    ports:
      - "5432:5432"
    environment:
      ECR_USER_PASSWORD: "i3lworks"
    volumes:
      - smartVol:/var/lib/postgresql/data

  elr-receiver:
    build:
     context: ./elr_receiver
    ports:
      - "8087:8888"
    environment:
      ECR_URL: "http://ecr-manager:8080/ecr-manager/ECR"
      PARSER_MODE: "ECR"
      TRANSPORT_MODE: "MLLP"
      HTTP_AUTH_USER: "user"
      HTTP_AUTH_PASSWORD: "password"

  pacer-index-api:
    build:
      context: ./pacer-index-api
    ports:
      - "8086:8080"
    environment:
      LOCAL_PACER_URL: ""
      LOCAL_PACER_SECURITY: "basic username:password"
      LOCAL_PACER_VERSION: "1.4.3"
      LOCAL_PACER_TYPE: "ECR"
      BASIC_AUTH_USER: "pacer"
      BASIC_AUTH_PASSWORD: "password"

  ecr-manager:
    depends_on:
      - ecr-postgresql
    build:
      context: ./ecr_manager
    ports:
      - "8085:8080"
    environment:
      JDBC_URL: "jdbc:postgresql://ecr-postgresql:5432/ecr"
      JDBC_USERNAME: "ecr_user"
      JDBC_PASSWORD: "i3lworks"
      PACER_INDEX_SERVICE: "http://pacer-index-api:8080/pacer-index-api/1.0.0/search"
      LOCAL_BULKDATA_PATH: "/temp"
      LOCAL_PACER_SECURITY: "Basic username:password"
      LOCAL_PACER_URL: ""

  frontend:
    container_name: sti-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile-prod
    ports:
      - '80:80'

volumes:
  smartVol:
